/// Data structures for Nepali Date Converter Plus
/// Contains all constants and lookup tables required for date conversion and formatting.
library;

/// The mapping of English numerals to Nepali numerals
const Map<String, String> englishToNepaliNumbers = {
  '0': '०',
  '1': '१',
  '2': '२',
  '3': '३',
  '4': '४',
  '5': '५',
  '6': '६',
  '7': '७',
  '8': '८',
  '9': '९',
};

/// The complete list of Nepali month names in order
const List<String> nepaliMonthNames = [
  "बैशाख",
  "जेठ",
  "असार",
  "साउन",
  "भदौ",
  "आश्विन",
  "कार्तिक",
  "मंसिर",
  "पुष",
  "माघ",
  "फाल्गुण",
  "चैत",
];

/// The complete list of Nepali day names in order
const List<String> nepaliDayNames = [
  "आइतवार",
  "सोमवार",
  "मङ्गलवार",
  "बुधवार",
  "बिहिवार",
  "शुक्रवार",
  "शनिवार",
];

/// Nepali months data (2000-2090 BS)
/// Each list represents a year, with 12 integers representing the number of days in each month
const List<List<int>> nepaliMonths = [
  [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31], // 2000 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2001 BS
  [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30], // 2002 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31], // 2003 BS
  [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31], // 2004 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2005 BS
  [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30], // 2006 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31], // 2007 BS
  [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31], // 2008 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2009 BS
  [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30], // 2010 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31], // 2011 BS
  [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30], // 2012 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2013 BS
  [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30], // 2014 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31], // 2015 BS
  [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30], // 2016 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2017 BS
  [31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30], // 2018 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31], // 2019 BS
  [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30], // 2020 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2021 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30], // 2022 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31], // 2023 BS
  [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30], // 2024 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2025 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31], // 2026 BS
  [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31], // 2027 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2028 BS
  [31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30], // 2029 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31], // 2030 BS
  [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31], // 2031 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2032 BS
  [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30], // 2033 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31], // 2034 BS
  [30, 32, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31], // 2035 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2036 BS
  [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30], // 2037 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31], // 2038 BS
  [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30], // 2039 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2040 BS
  [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30], // 2041 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31], // 2042 BS
  [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30], // 2043 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2044 BS
  [31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30], // 2045 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31], // 2046 BS
  [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30], // 2047 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2048 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30], // 2049 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31], // 2050 BS
  [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30], // 2051 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2052 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30], // 2053 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31], // 2054 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2055 BS
  [31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30], // 2056 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31], // 2057 BS
  [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31], // 2058 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2059 BS
  [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30], // 2060 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31], // 2061 BS
  [30, 32, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31], // 2062 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2063 BS
  [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30], // 2064 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31], // 2065 BS
  [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31], // 2066 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2067 BS
  [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30], // 2068 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31], // 2069 BS
  [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30], // 2070 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2071 BS
  [31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30], // 2072 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31], // 2073 BS
  [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30], // 2074 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2075 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30], // 2076 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31], // 2077 BS
  [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30], // 2078 BS
  [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30], // 2079 BS
  [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30], // 2080 BS
  [31, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30], // 2081 BS
  [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30], // 2082 BS
  [31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30], // 2083 BS
  [31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30], // 2084 BS
  [31, 32, 31, 32, 30, 31, 30, 30, 29, 30, 30, 30], // 2085 BS
  [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30], // 2086 BS
  [31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30], // 2087 BS
  [30, 31, 32, 32, 30, 31, 30, 30, 29, 30, 30, 30], // 2088 BS
  [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30], // 2089 BS
  [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30], // 2090 BS
];

/// Number of days in each Gregorian month (non-leap year)
const List<int> gregorianMonths = [
  31,
  28,
  31,
  30,
  31,
  30,
  31,
  31,
  30,
  31,
  30,
  31,
];

/// Reference start dates for conversion algorithms
/// These are the base reference points for AD to BS conversion
class ReferenceDate {
  /// The starting reference year in English (Gregorian) calendar
  static const int startingEngYear = 1944;

  /// The starting reference month in English (Gregorian) calendar
  static const int startingEngMonth = 1;

  /// The starting reference day in English (Gregorian) calendar
  static const int startingEngDay = 1;

  /// The corresponding starting year in Nepali (BS) calendar
  static const int startingNepYear = 2000;

  /// The corresponding starting month in Nepali (BS) calendar
  static const int startingNepMonth = 9;

  /// The corresponding starting day in Nepali (BS) calendar
  static const int startingNepDay = 17;
}
